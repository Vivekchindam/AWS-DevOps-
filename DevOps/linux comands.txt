[ec2-user@ip-172-31-47-170 ~]$ sudo su
[root@ip-172-31-47-170 ec2-user]# uptime
 05:34:35 up 4 min,  1 user,  load average: 0.01, 0.04, 0.01
[root@ip-172-31-47-170 ec2-user]# ls
[root@ip-172-31-47-170 ec2-user]# mkdir Vivek
[root@ip-172-31-47-170 ec2-user]# cd Vivek
[root@ip-172-31-47-170 Vivek]# ls
[root@ip-172-31-47-170 Vivek]# touch sample
[root@ip-172-31-47-170 Vivek]# cat > sample
grep is a command-line tool that allows you to use regular expressions to search for patterns. The basic usage looks like this: bash. grep pattern file. There are different versions of grep available, with different options and features, but the core behaviour is the same for the most part.
[root@ip-172-31-47-170 Vivek]# cat sample
grep is a command-line tool that allows you to use regular expressions to search for patterns. The basic usage looks like this: bash. grep pattern file. There are different versions of grep available, with different options and features, but the core behaviour is the same for the most part.
[root@ip-172-31-47-170 Vivek]# whoami
root
[root@ip-172-31-47-170 Vivek]# hostname
ip-172-31-47-170.eu-north-1.compute.internal
[root@ip-172-31-47-170 Vivek]# pwd
/home/ec2-user/Vivek
[root@ip-172-31-47-170 Vivek]# man
What manual page do you want?
[root@ip-172-31-47-170 Vivek]# cd ..
[root@ip-172-31-47-170 ec2-user]# ls
Vivek
[root@ip-172-31-47-170 ec2-user]# mkdir CHV
[root@ip-172-31-47-170 ec2-user]# ls
CHV  Vivek
[root@ip-172-31-47-170 ec2-user]# rmdir CHV
[root@ip-172-31-47-170 ec2-user]# ls
Vivek
[root@ip-172-31-47-170 ec2-user]# cd Vivek
[root@ip-172-31-47-170 Vivek]# cp sample
cp: missing destination file operand after ‘sample’
Try 'cp --help' for more information.
[root@ip-172-31-47-170 Vivek]# cp --help
Usage: cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...
Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

Mandatory arguments to long options are mandatory for short options too.
  -a, --archive                same as -dR --preserve=all
      --attributes-only        don't copy the file data, just the attributes
      --backup[=CONTROL]       make a backup of each existing destination file
  -b                           like --backup but does not accept an argument
      --copy-contents          copy contents of special files when recursive
  -d                           same as --no-dereference --preserve=links
  -f, --force                  if an existing destination file cannot be
                                 opened, remove it and try again (this option
                                 is ignored when the -n option is also used)
  -i, --interactive            prompt before overwrite (overrides a previous -n
                                  option)
  -H                           follow command-line symbolic links in SOURCE
  -l, --link                   hard link files instead of copying
  -L, --dereference            always follow symbolic links in SOURCE
  -n, --no-clobber             do not overwrite an existing file (overrides
                                 a previous -i option)
  -P, --no-dereference         never follow symbolic links in SOURCE
  -p                           same as --preserve=mode,ownership,timestamps
      --preserve[=ATTR_LIST]   preserve the specified attributes (default:
                                 mode,ownership,timestamps), if possible
                                 additional attributes: context, links, xattr,
                                 all
  -c                           deprecated, same as --preserve=context
      --no-preserve=ATTR_LIST  don't preserve the specified attributes
      --parents                use full source file name under DIRECTORY
  -R, -r, --recursive          copy directories recursively
      --reflink[=WHEN]         control clone/CoW copies. See below
      --remove-destination     remove each existing destination file before
                                 attempting to open it (contrast with --force)
      --sparse=WHEN            control creation of sparse files. See below
      --strip-trailing-slashes  remove any trailing slashes from each SOURCE
                                 argument
  -s, --symbolic-link          make symbolic links instead of copying
  -S, --suffix=SUFFIX          override the usual backup suffix
  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY
  -T, --no-target-directory    treat DEST as a normal file
  -u, --update                 copy only when the SOURCE file is newer
                                 than the destination file or when the
                                 destination file is missing
  -v, --verbose                explain what is being done
  -x, --one-file-system        stay on this file system
  -Z                           set SELinux security context of destination
                                 file to default type
      --context[=CTX]          like -Z, or if CTX is specified then set the
                                 SELinux or SMACK security context to CTX
      --help     display this help and exit
      --version  output version information and exit

By default, sparse SOURCE files are detected by a crude heuristic and the
corresponding DEST file is made sparse as well.  That is the behavior
selected by --sparse=auto.  Specify --sparse=always to create a sparse DEST
file whenever the SOURCE file contains a long enough sequence of zero bytes.
Use --sparse=never to inhibit creation of sparse files.

When --reflink[=always] is specified, perform a lightweight copy, where the
data blocks are copied only when modified.  If this is not possible the copy
fails, or if --reflink=auto is specified, fall back to a standard copy.

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

As a special case, cp makes a backup of SOURCE when the force and backup
options are given and SOURCE and DEST are the same name for an existing,
regular file.

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
For complete documentation, run: info coreutils 'cp invocation'
[root@ip-172-31-47-170 Vivek]# cp
cp: missing file operand
Try 'cp --help' for more information.
[root@ip-172-31-47-170 Vivek]# mv sample samp
[root@ip-172-31-47-170 Vivek]# ls
samp
[root@ip-172-31-47-170 Vivek]# cd ..
[root@ip-172-31-47-170 ec2-user]# stat
stat: missing operand
Try 'stat --help' for more information.
[root@ip-172-31-47-170 ec2-user]# stat Vivek
  File: ‘Vivek’
  Size: 18              Blocks: 0          IO Block: 4096   directory
Device: 10301h/66305d   Inode: 4519247     Links: 2
Access: (0755/drwxr-xr-x)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2025-04-10 05:35:39.283874333 +0000
Modify: 2025-04-10 05:48:33.703282038 +0000
Change: 2025-04-10 05:48:33.703282038 +0000
 Birth: -
[root@ip-172-31-47-170 ec2-user]# stat samp
stat: cannot stat ‘samp’: No such file or directory
[root@ip-172-31-47-170 ec2-user]# cd Vivek
[root@ip-172-31-47-170 Vivek]# stat samp
  File: ‘samp’
  Size: 292             Blocks: 8          IO Block: 4096   regular file
Device: 10301h/66305d   Inode: 4519823     Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2025-04-10 05:36:29.687829082 +0000
Modify: 2025-04-10 05:38:32.311724296 +0000
Change: 2025-04-10 05:48:33.703282038 +0000
 Birth: -
[root@ip-172-31-47-170 Vivek]# file samp
samp: ASCII text
[root@ip-172-31-47-170 Vivek]# cd ..
[root@ip-172-31-47-170 ec2-user]# ls -lt
total 0
drwxr-xr-x 2 root root 18 Apr 10 05:48 Vivek
[root@ip-172-31-47-170 ec2-user]# chmod 644
chmod: missing operand after ‘644’
Try 'chmod --help' for more information.
[root@ip-172-31-47-170 ec2-user]# chmod 644 Vivek
[root@ip-172-31-47-170 ec2-user]# ls -l
total 0
drw-r--r-- 2 root root 18 Apr 10 05:48 Vivek
[root@ip-172-31-47-170 ec2-user]# chown Vivek
chown: missing operand after ‘Vivek’
Try 'chown --help' for more information.
[root@ip-172-31-47-170 ec2-user]# chown ec2-user Vivek
[root@ip-172-31-47-170 ec2-user]# ls -l
total 0
drw-r--r-- 2 ec2-user root 18 Apr 10 05:48 Vivek
[root@ip-172-31-47-170 ec2-user]# uptime
 06:05:45 up 35 min,  1 user,  load average: 0.00, 0.00, 0.00
[root@ip-172-31-47-170 ec2-user]#
[root@ip-172-31-47-170 ec2-user]# history
    1  uptime
    2  ls
    3  mkdir Vivek
    4  cd Vivek
    5  ls
    6  touch sample
    7  cat > sample
    8  cat sample
    9  whoami
   10  hostname
   11  pwd
   12  man
   13  cd ..
   14  ls
   15  mkdir CHV
   16  ls
   17  rmdir CHV
   18  ls
   19  cd Vivek
   20  cp sample
   21  cp --help
   22  cp
   23  mv sample samp
   24  ls
   25  cd ..
   26  stat
   27  stat Vivek
   28  stat samp
   29  cd Vivek
   30  stat samp
   31  file samp
   32  cd ..
   33  ls -lt
   34  chmod 644
   35  chmod 644 Vivek
   36  ls -l
   37  chown Vivek
   38  chown ec2-user Vivek
   39  ls -l
   40  uptime
   41  history
[root@ip-172-31-47-170 ec2-user]#
[root@ip-172-31-47-170 ec2-user]# adduser ec21-user
[root@ip-172-31-47-170 ec2-user]# who
ec2-user pts/0        2025-04-10 12:09 (157.48.152.186)
[root@ip-172-31-47-170 ec2-user]# su
[root@ip-172-31-47-170 ec2-user]# sudo su
[root@ip-172-31-47-170 ec2-user]# su ec21-user
[ec21-user@ip-172-31-47-170 ec2-user]$ w
 12:13:42 up 16 min,  1 user,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
ec2-user pts/0    157.48.152.186   12:09    1.00s  0.05s  0.01s sshd: ec2-user [priv]
[ec21-user@ip-172-31-47-170 ec2-user]$ ls
ls: cannot open directory .: Permission denied
[ec21-user@ip-172-31-47-170 ec2-user]$ mkdir Vivek
mkdir: cannot create directory ‘Vivek’: Permission denied
[ec21-user@ip-172-31-47-170 ec2-user]$ sudo su

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
sudo: 3 incorrect password attempts
[ec21-user@ip-172-31-47-170 ec2-user]$ sudo su

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
sudo: 3 incorrect password attempts
[ec21-user@ip-172-31-47-170 ec2-user]$ sudo -i

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
sudo: 3 incorrect password attempts
[ec21-user@ip-172-31-47-170 ec2-user]$ sudo passwd newuser

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
Sorry, try again.
[sudo] password for ec21-user:
sudo: 3 incorrect password attempts
[ec21-user@ip-172-31-47-170 ec2-user]$ id
uid=1001(ec21-user) gid=1001(ec21-user) groups=1001(ec21-user)
[ec21-user@ip-172-31-47-170 ec2-user]$ cd ..
[ec21-user@ip-172-31-47-170 home]$ cd /
[ec21-user@ip-172-31-47-170 /]$ cd ec2-user
bash: cd: ec2-user: No such file or directory
[ec21-user@ip-172-31-47-170 /]$ sudo /

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for ec21-user: